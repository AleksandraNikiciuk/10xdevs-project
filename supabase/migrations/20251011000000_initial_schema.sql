-- Migration: Initial Schema for 10x-cards Application
-- Description: Creates the core tables, indexes, RLS policies, and triggers
-- Tables affected: generations, flashcards, generation_error_logs
-- Special considerations: 
--   - RLS enabled on all tables
--   - Automatic updated_at triggers
--   - Foreign key constraints to auth.users
--   - Proper indexing for performance

-- enable pgcrypto for uuid generation
create extension if not exists pgcrypto;

-- function to handle updated_at timestamps
create or replace function handle_updated_at()
returns trigger as $$
begin
    new.updated_at = now();
    return new;
end;
$$ language plpgsql;

-- generations table
create table generations (
    id bigserial primary key,
    user_id uuid not null references auth.users(id) on delete cascade,
    model varchar not null,
    source_text_length integer not null check (source_text_length > 0),
    source_text_hash varchar not null,
    generated_count integer not null default 0,
    accepted_unedited_count integer not null default 0,
    accepted_edited_count integer not null default 0,
    generation_duration integer not null,
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now()
);

-- enable rls on generations
alter table generations enable row level security;

-- rls policies for generations
comment on table generations is 'Stores metadata about each flashcard generation session';

-- select policy for authenticated users
create policy "Users can view their own generations"
    on generations for select
    to authenticated
    using (user_id = auth.uid());

-- insert policy for authenticated users
create policy "Users can create their own generations"
    on generations for insert
    to authenticated
    with check (user_id = auth.uid());

-- update policy for authenticated users
create policy "Users can update their own generations"
    on generations for update
    to authenticated
    using (user_id = auth.uid());

-- delete policy for authenticated users
create policy "Users can delete their own generations"
    on generations for delete
    to authenticated
    using (user_id = auth.uid());

-- generations updated_at trigger
create trigger handle_generations_updated_at
    before update on generations
    for each row
    execute function handle_updated_at();

-- flashcards table
create table flashcards (
    id bigserial primary key,
    user_id uuid not null references auth.users(id) on delete cascade,
    generation_id bigint references generations(id) on delete set null,
    question varchar(255) not null,
    answer varchar(1000) not null,
    source varchar(50) not null check (source in ('ai-full', 'ai-edited', 'manual')),
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now()
);

-- enable rls on flashcards
alter table flashcards enable row level security;

-- rls policies for flashcards
comment on table flashcards is 'Contains individual flashcards, either generated by AI or created manually';

-- select policy for authenticated users
create policy "Users can view their own flashcards"
    on flashcards for select
    to authenticated
    using (user_id = auth.uid());

-- insert policy for authenticated users
create policy "Users can create their own flashcards"
    on flashcards for insert
    to authenticated
    with check (user_id = auth.uid());

-- update policy for authenticated users
create policy "Users can update their own flashcards"
    on flashcards for update
    to authenticated
    using (user_id = auth.uid());

-- delete policy for authenticated users
create policy "Users can delete their own flashcards"
    on flashcards for delete
    to authenticated
    using (user_id = auth.uid());

-- flashcards updated_at trigger
create trigger handle_flashcards_updated_at
    before update on flashcards
    for each row
    execute function handle_updated_at();

-- generation_error_logs table
create table generation_error_logs (
    id bigserial primary key,
    user_id uuid not null references auth.users(id) on delete cascade,
    error_code varchar(100) not null,
    error_message text not null,
    model varchar not null,
    source_text_length integer not null,
    source_text_hash varchar not null,
    created_at timestamptz not null default now()
);

-- enable rls on generation_error_logs
alter table generation_error_logs enable row level security;

-- rls policies for generation_error_logs
comment on table generation_error_logs is 'Logs errors that occur during the flashcard generation process';

-- select policy for authenticated users
create policy "Users can view their own error logs"
    on generation_error_logs for select
    to authenticated
    using (user_id = auth.uid());

-- insert policy for authenticated users
create policy "Users can create their own error logs"
    on generation_error_logs for insert
    to authenticated
    with check (user_id = auth.uid());

-- delete policy for authenticated users
create policy "Users can delete their own error logs"
    on generation_error_logs for delete
    to authenticated
    using (user_id = auth.uid());

-- create indexes for better performance
create index idx_generations_on_user_id on generations(user_id);
create index idx_flashcards_on_user_id on flashcards(user_id);
create index idx_flashcards_on_generation_id on flashcards(generation_id);
create index idx_generation_error_logs_on_user_id on generation_error_logs(user_id);
